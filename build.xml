<project name="XPort" basedir="." default="dist">

	<target name="init">
		<property name="source.dir" value="src" />
		<property name="dist.dir" value="dist" />
		<property name="output.dir" value="build/classes" />
		<property name="lib.dir" value="lib" />
		<property name="conf.dir" value="conf" />
		<property name="samples.dir" value="samples" />		
	</target>
	
	<target name="clean" depends="init">
		<delete dir="${dist.dir}" />
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.dir}/bin" />
		<mkdir dir="${dist.dir}/conf" />
	</target>


	<!-- Create binary distribution --><!--
	<target name="dist" description="Create binary distribution">
		<mkdir dir="${distpath.project}" />
		<jar   jarfile="${distpath.project}/${project.distname}.jar"
       	basedir="./classes" />
		<copy  file="${distpath.project}/${project.distname}.jar"
		       todir="${distpath.project}" />
		<war   basedir="../"
		       warfile="${distpath.project}/${project.distname}.war"
		       webxml="web.xml">
		   <exclude name="${distpath.project}/${project.distname}.war" />
		</war>
  </target>
	-->
	
	<target name="erez" depends="init,prepare">
		<jar destfile="${dist.dir}/WEB-INF/lib/erezfilter.jar" basedir="${output.dir}"
			includes="**/erez4/Erez*.class" >
			<manifest>
                <attribute name="Main-Class" value="ch.ethz.epics.erez4.ErezFilter"/>
            </manifest>		
		</jar>
	</target>
		
	<target name="dist" depends="init,prepare">
		<jar destfile="${dist.dir}/bin/xport.jar" basedir="${output.dir}">
			<manifest>
                <attribute name="Main-Class" value="ch.ethz.integration.XPort"/>
            </manifest>
		</jar>
		
		<copy todir="${dist.dir}/lib">
			<fileset dir="${lib.dir}" />
		</copy>
	    <copy todir="${dist.dir}/conf">
	    	<fileset includes="**" dir="${conf.dir}" />
	    </copy>
		<copy todir="${dist.dir}/samples">
			<fileset dir="${samples.dir}" />
		</copy>
		<copy todir="${dist.dir}">
			<fileset file="xport.bat" />
		</copy>
		<copy todir="${dist.dir}/bin">
			<fileset file="sitemap-splitter-template.php" />
		</copy>
		
	    <zip destfile="xport-dist.zip"
	         basedir="${dist.dir}"
	         includes="**"	        
	    />
	</target>	
	
	<target name="deploy" depends="init">
		<jar destfile="${dist.dir}/xpics.jar" basedir="${deploy.lib.dir}">
			<manifest>
                <attribute name="Main-Class" value="ch.ethz.integration.XPics"/>
            </manifest>
		</jar>
			
			<copy todir="${dist.dir}/lib">
				<fileset dir="${lib.dir}" />
			</copy>
		    <copy todir="${dist.dir}">
		    	<fileset includes="*" dir="${conf.dir}" />
		    </copy>
  </target>
  <target name="test" depends="dist">
  	  <copy todir="Z:/Program Files/Apache Group/Tomcat E-Pics Tools/webapps/xpics/WEB-INF/lib">
  	  	<fileset dir="${dist.dir}/WEB-INF/lib" includes="xpics.jar" />
  	  </copy>
  </target>
  
  <!-- classpath --><!--
  <path id="compile.classpath">
    <pathelement path="${servlet.jar}" />
    <pathelement path="lib/commons-beanutils.jar" />
    <pathelement path="lib/commons-digester.jar" />
    <pathelement path="lib/struts.jar" />
    <pathelement path="classes" />
    <pathelement path="${classpath}" />
  </path>
  -->

  <!-- Copy any resource or configuration files -->
  <target name="resources">
    <copy todir="classes" includeEmptyDirs="no">
      <fileset dir="src">
        <patternset>
          <include name="**/*.conf" />
          <include name="**/*.properties" />
          <include name="**/*.xml" />
          <exclude name="build.xml" />
        </patternset>
      </fileset>
    </copy>
  </target>

  <!-- Normal build of application --><!--
  <target name="compile" depends="prepare,resources">
    <javac srcdir="src" destdir="classes">
      <classpath refid="compile.classpath" />
    </javac>
  </target>
  -->


  <!-- Build Javadoc documentation -->
  <!--
  <target name="javadoc" description="Generate JavaDoc API docs">
    <delete dir="./doc/api" />
    <mkdir  dir="./doc/api" />
    <javadoc
      sourcepath="./src"
      destdir="./doc/api"
      classpath="${servlet.jar}:${jdbc20ext.jar}"
      packagenames="*"
      author="true"
      private="true"
      version="true"
      windowtitle="${project.title} API Documentation"
      doctitle="&lt;h1&gt;${project.title} Documentation (Version ${project.version})&lt;/h1&gt;"
      bottom="Copyright &#169; 2005">
      <classpath refid="compile.classpath" />
    </javadoc>
  </target>
  -->
	
  <!-- Build entire project -->
  <!-- 
  <target name="project" depends="clean,prepare,compile,javadoc" />
  -->


  <!-- Build project and create distribution-->
  <target name="all" depends="dist" />

</project>